[alembic]
# Path to the migration scripts
script_location = alembic

# Template used to generate new revision files.
# Default is 'standard'.
# template =

# Revision name template. Default is "%%(rev)s_%%(slug)s"
# revision_id =

# The default comparison strategy to use when autogenerating migrations.
# This can be changed in env.py.
# autogenerate_target_metadata =

# Specifies the file encoding to use when reading and writing files.
# Default is 'utf-8'.
# file_encoding = utf-8

# Use this to specify the module where your declarative Base is.
# This is usually the file where you define your SQLAlchemy models.
# For example: backend.models
# target_metadata = backend.models.Base  # <--- UNCOMMENT AND ADJUST THIS LINE IF YOUR Base IS NOT DIRECTLY ACCESSIBLE IN env.py

# set to 'true' to allow alembic to autogenerate revision files
# if no changes are detected.
# autogenerate = true

# The default context class to use.
# context_class = alembic.context.impl.DefaultContext

# A section to define how the database URL is loaded.
# This section is commonly used to load the database URL from an environment variable.
# For example:
# sqlalchemy.url = ENV:DATABASE_URL::sqlite:///./test.db

# Configures the SQLAlchemy dialect to use when generating migrations.
# For example:
# sqlalchemy.dialect = postgresql

# The database connection string. This can also be set via the 'sqlalchemy.url' option above,
# or directly in env.py.
# Leave commented as you're handling it via environment variable in database.py
# sqlalchemy.url = sqlite:///./backend/db.sqlite3

# Default value for 'log_config_path' in env.py.
# This should point to this alembic.ini itself.
# log_config_path = alembic.ini

# --- Logging configuration ---
# This is the section that was missing/causing your KeyError.
# This configuration will be read by logging.config.fileConfig() in env.py.

[loggers]
keys = root, alembic, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_alembic]
level = INFO
handlers = console
qualname = alembic

[logger_sqlalchemy]
level = WARN
handlers = console
qualname = sqlalchemy.engine

[handler_console]
class = StreamHandler
args = (sys.stderr,)
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S