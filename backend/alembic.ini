    [alembic]
    # Path to the migration scripts
    script_location = alembic

    # Template used to generate new revision files.
    # Default is 'standard'.
    # template =

    # Revision name template. Default is "%%(rev)s_%%(slug)s"
    # revision_id =

    # The default comparison strategy to use when autogenerating migrations.
    # This can be changed in env.py.
    # autogenerate_target_metadata =

    # Specifies the file encoding to use when reading and writing files.
    # Default is 'utf-8'.
    # file_encoding = utf-8

    # Use this to specify the module where your declarative Base is.
    # This is usually the file where you define your SQLAlchemy models.
    # For example: backend.models
    # target_metadata = backend.models.Base

    # set to 'true' to allow alembic to autogenerate revision files
    # if no changes are detected.
    # autogenerate = true

    # The default context class to use.
    # context_class = alembic.context.impl.DefaultContext

    # The database connection string. This is the ONLY sqlalchemy.url definition.
    # Temporarily set for local SQLite migrations.
    # REMEMBER TO REVERT THIS AFTER GENERATING MIGRATIONS!
    # sqlalchemy.url = sqlite:///db.sqlite3 # Path corrected

    # Default value for 'log_config_path' in env.py.
    # This should point to this alembic.ini itself.
    # log_config_path = alembic.ini

    # --- Logging configuration ---
    [loggers]
    keys = root, alembic, sqlalchemy

    [handlers]
    keys = console

    [formatters]
    keys = generic

    [logger_root]
    level = INFO
    handlers = console

    [logger_alembic]
    level = INFO
    handlers = console
    qualname = alembic

    [logger_sqlalchemy]
    level = WARN
    handlers = console
    qualname = sqlalchemy.engine

    [handler_console]
    class = StreamHandler
    args = (sys.stderr,)
    formatter = generic

    [formatter_generic]
    format = %(levelname)-5.5s [%(name)s] %(message)s
    datefmt = %H:%M:%S
    